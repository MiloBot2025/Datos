name: HashComparativo (test sin guardia)

on:
  schedule:
    - cron: "*/20 * * * *"   # opcional: cada 20 min
  workflow_dispatch:         # botón "Run workflow"

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      WORKDIR: ${{ github.workspace }}/run_out
      TZ: America/Argentina/Buenos_Aires

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Google Chrome
        uses: browser-actions/setup-chrome@v1

      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb rsync

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run script
        env:
          IMSA_PASSWORD: ${{ secrets.IMSA_PASSWORD }}
          WORKDIR: ${{ env.WORKDIR }}
        run: |
          set -e
          python hash_comparativo.py || true

          # preparar contenido para Pages
          mkdir -p "$WORKDIR/site/public_reports" "$WORKDIR/site/public_listas"

          # copiar si existen archivos (no fallar si no hay)
          rsync -av --ignore-missing-args "$WORKDIR/_reports/" "$WORKDIR/site/public_reports/" || true
          rsync -av --ignore-missing-args "$WORKDIR/public_listas/" "$WORKDIR/site/public_listas/" || true

          # index.html simple (bash)
          NOW="$(date -u +%FT%TZ)"
          {
            echo '<!doctype html>'
            echo '<meta charset="utf-8"><title>Listas y Reportes</title>'
            echo '<h1>Listas y Reportes</h1>'
            echo "<p>Última actualización: ${NOW}</p>"
            echo '<h2>Reportes de cambios</h2><ul>'
            if compgen -G "$WORKDIR/site/public_reports/*" > /dev/null; then
              for f in "$WORKDIR/site/public_reports/"*; do
                b=$(basename "$f"); sz=$(( $(stat -c%s "$f") / 1024 ))
                echo "<li><a href=\"public_reports/$b\">$b</a> — ${sz} KB</li>"
              done
            else
              echo '<li>(vacío)</li>'
            fi
            echo '</ul><h2>Últimas "Hoja 1"</h2><ul>'
            if compgen -G "$WORKDIR/site/public_listas/*" > /dev/null; then
              for f in "$WORKDIR/site/public_listas/"*; do
                b=$(basename "$f"); sz=$(( $(stat -c%s "$f") / 1024 ))
                echo "<li><a href=\"public_listas/$b\">$b</a> — ${sz} KB</li>"
              done
            else
              echo '<li>(vacío)</li>'
            fi
            echo '</ul>'
          } > "$WORKDIR/site/index.html"

      - name: Upload artifacts (debug)
        uses: actions/upload-artifact@v4
        with:
          name: resultados-${{ github.run_id }}
          path: |
            ${{ env.WORKDIR }}/_reports/*.xlsx
            ${{ env.WORKDIR }}/public_listas/*.xlsx
            ${{ env.WORKDIR }}/SUMMARY.md
            ${{ env.WORKDIR }}/site/index.html
          if-no-files-found: warn
          retention-days: 7

      - name: Persist snapshots & hashes
        run: |
          mkdir -p persist
          rsync -av "$WORKDIR/_hashdb/" persist/_hashdb/ || true
          rsync -av "$WORKDIR/_snapshots/" persist/_snapshots/ || true
          git config user.name "actions-bot"
          git config user.email "actions@users.noreply.github.com"
          git add persist || true
          git commit -m "ci: update snapshots [skip ci]" || echo "No changes"
          git push

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ env.WORKDIR }}/site
          publish_branch: gh-pages
          force_orphan: true

      - name: Cleanup change flag
        run: rm -f "${{ env.WORKDIR }}/CHANGES_FLAG" || true
