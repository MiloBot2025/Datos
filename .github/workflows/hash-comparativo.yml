name: HashComparativo (main)

on:
  schedule:
    - cron: "*/5 * * * *"      # GitHub no garantiza 1'; usa 5'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - uses: browser-actions/setup-chrome@v1

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests openpyxl selenium webdriver-manager

      - name: Run script (descarga, hash, hoja1, difs)
        env:
          WORKDIR: ${{ github.workspace }}
          IMSA_PASSWORD: ${{ secrets.IMSA_PASSWORD }}
          BORRAR_DUPLICADO: "true"
          #FORCE_HOJA1: "true"   # destapar si quer√©s forzar siempre Stock V
        run: python hash_comparativo.py

      - name: Build public_reports index.json
        shell: python
        run: |
          import json
          from pathlib import Path
          root = Path("public_reports"); root.mkdir(parents=True, exist_ok=True)
          items=[]
          for p in root.glob("*.xlsx"):
              st=p.stat()
              items.append({"name":p.name,"url":f"public_reports/{p.name}","size_kb":round(st.st_size/1024,1),"mtime":int(st.st_mtime)})
          items.sort(key=lambda x:x["mtime"], reverse=True)
          (root/"index.json").write_text(json.dumps(items, indent=2, ensure_ascii=False), encoding="utf-8")
          print(f"index.json con {len(items)} reportes")

      - name: Build public_listas index.json
        shell: python
        run: |
          import json
          from pathlib import Path
          root = Path("public_listas"); root.mkdir(parents=True, exist_ok=True)
          items=[]
          for p in root.glob("*_ULTIMA.xlsx"):
              st=p.stat()
              items.append({"name":p.name,"url":f"public_listas/{p.name}","size_kb":round(st.st_size/1024,1),"mtime":int(st.st_mtime)})
          items.sort(key=lambda x:x["mtime"], reverse=True)
          (root/"index.json").write_text(json.dumps(items, indent=2, ensure_ascii=False), encoding="utf-8")
          print("public_listas/index.json generado")

      - name: List & commit
        run: |
          echo "public_listas:"; ls -lh public_listas || true
          echo "public_reports:"; ls -lh public_reports || true
          echo "public_db:"; ls -lh public_db || true
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "Sin cambios para commitear."
          else
            git commit -m "CI: actualizar outputs"
            git push
          fi
